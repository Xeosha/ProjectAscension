services:
  userservice.api:
    image: userservice
    container_name: userservice.api
    env_file:
      - .env
    build:
        context: .
        dockerfile: backend/src/UserService/UserService.API/Dockerfile
    environment:
      - UserServiceDbContext=${DB_CONNECTION}  
      - JWT__Issuer=${JWT__Issuer}
      - JWT__Audience=${JWT__Audience}
      - JWT__Key=${JWT__Key}
      - JWT__ExpiredMinutesTime=${JWT__ExpiredMinutesTime}
    ports:
      - "6000:8080"
      - "6060:8081" 
    depends_on:
      - userservice.db
  
  gameservice.api:
    image: gameservice
    container_name: gameservice.api
    build:
        context: .
        dockerfile: backend/src/GameService/GameService.API/Dockerfile
    ports:
      - "6001:8080"
      - "6061:8081" 
  
  userservice.db:
    container_name: userservice.db
    restart: always
    image: postgres:latest  
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data-userservice:/var/lib/postgresql/data
    ports:
      - "5432:5432"  

  pgadmin:
    restart: always
    image: dpage/pgadmin4
    container_name: pgadmin_1
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:  
      - "5050:80"
    depends_on:
      - userservice.db
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  postgres-data-userservice:
  pgadmin-data: